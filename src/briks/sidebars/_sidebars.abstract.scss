/** ------------------------------------------------------------------------------------------------
 *  @filename  _sidebars.abstract.scss
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Sidebars brik adds a left and/or right sidebar to a view.
 *  @dependencies  core/rhythm.abstract
 ** --------------------------------------------------------------------------------------------- */

// ------------------
// Sidebar variables.
//
$sidebars-init: true !default;
$sidebars-left: true !default;
$sidebars-right: true !default;
$sidebars__base: sidebars !default;
$sidebars__width: 32rem !default;

/**
 *  Create a left or right sidebar.
 *
 *  @param   {number}  $width:  $sidebar__width  Width of sidebar.
 *  @param   {string}  $side:  left|right  Left or right sidebar.
 *  @param   {number|boolean}  $pin-at:  false  Min-width value to "pin" sidebar at. `true` will
 *      make it always pinned.
 *  @param   {boolean}  $push-content:  true  Whether sidebar should "push" content when opening
 *      from off-canvas.
 */
@mixin sidebar($width: $sidebars__width, $side: left, $pin-at: false, $push-content: true) {
	height: 100vh;
	width: $width;
	min-width: $width;
	overflow-y: auto;
	position: relative;
	@include elevate(6);

	// If $pin-at is true, sidebar is always pinned. Otherwise it defaults to "off canvas".
	@if ($pin-at != true) {
		margin-#{$side}: -$width;
		will-change: margin-#{$side};
		transition: margin-#{$side} 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);

		// This creates a "buffer" of padding so that content underneath isn't displayed during the
		// transition.
		&:before {
			content: ' ';
			background-color: inherit;
			width: 4rem;
			height: 100%;
			position: absolute;
			#{$side}: -4rem;
			top: 0;
		}
	}

	// $push-content: When off canvas, opening it will push main content over.
	@if ($push-content != true) {
		position: fixed;
		#{$side}: 0;
		top: 0;
	}

	// Add $pin-at media query.
	@if type-of($pin-at) == number {
		@media (min-width: $pin-at) {
			margin-#{$side}: 0;
			position: relative;
			#{$side}: auto;
			top: auto;
		}
	}

	// Active / open state.
	&.--is-active {
		margin-#{$side}: 0;
	}
}
