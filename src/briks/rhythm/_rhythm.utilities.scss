// stylelint-disable declaration-no-important, declaration-block-single-line-max-declarations, rule-empty-line-before
@if variable-exists(rhythm__spacing-values) {
	$lingo: $rhythm__spacing-lingo;
	@each $value in $rhythm__spacing-values {
		$n: str-replace(inspect($value / ($value * 0 + 1)), '.', map-get($lingo, dot));
		@each $property in padding, margin {
			.#{map-get($lingo, $property)}-#{$n} {
				#{$property}: $value !important;
			}
			.#{map-get($lingo, $property)}#{map-get($lingo, horizontal)}-#{$n} {
				#{$property}-left: $value !important;
				#{$property}-right: $value !important;
			}
			.#{map-get($lingo, $property)}#{map-get($lingo, vertical)}-#{$n} {
				#{$property}-bottom: $value !important;
				#{$property}-top: $value !important;
			}
			.#{map-get($lingo, $property)}#{map-get($lingo, left)}-#{$n} {
				#{$property}-left: $value !important;
			}
			.#{map-get($lingo, $property)}#{map-get($lingo, right)}-#{$n} {
				#{$property}-right: $value !important;
			}
			.#{map-get($lingo, $property)}#{map-get($lingo, bottom)}-#{$n} {
				#{$property}-bottom: $value !important;
			}
			.#{map-get($lingo, $property)}#{map-get($lingo, top)}-#{$n} {
				#{$property}-top: $value !important;
			}
		}
	}
}
