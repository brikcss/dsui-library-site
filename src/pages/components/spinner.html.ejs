---js
{
	name: 'Spinner',
	npmPath: '@brikcss/spinner',
	intro:
		'<p>Spinner is a visual indicator that content on the page is loading. Spinner can optionally display the progress of an operation.</p>',
	<!-- related: [], -->
	setup: {
		summary:
			'<p>Make sure to <a ui-sref="including-assets">include the appropriate assets in your app</a>.</p>'
	}
}
---

<brik-tabs class="page-tabs" tabs="About, Setup, Usage, Playground">
	<div>
		<%- include ../partials/_intro.html.ejs %>

		<h2 class="font__title2">Guidelines</h2>

		<p class="font__subheading">We are working on this page.</p>
	</div>

	<div>
		<%- include ../partials/_install.html.ejs %>
	</div>

	<div>
		<h2 class="font__title2 mt-0">JS Usage</h2>

		<h3 class="font__title3 heading__separator">Spinner API</h3>
		<ul class="bullets">
			<li><strong><code>all</code></strong>: Access all spinner instances, grouped by ID.</li>
			<li><strong><code>Spinner.create(element, options)</code></strong>: Create a spinner instance.</li>
			<li><strong><code>Spinner.toggle(id)</code></strong>: Toggle a spinner instance.</li>
			<li><strong><code>Spinner.load(id)</code></strong>: Load / activate a spinner instance.</li>
			<li><strong><code>Spinner.unload(id)</code></strong>: Unload / deactivate a spinner instance.</li>
			<li><strong><code>Spinner.destroy(id)</code></strong>: Destroy a spinner instance.</li>
		</ul>
		<p><em>Note: Each method returns the spinner instance, except the <code>destroy</code> method, which returns a Boolean.</em></p>

		<h3 class="font__title3 heading__separator">Spinner instance</h3>
		<p>Most of the same methods can be called on a spinner instance without knowing its ID.</p>
		<ul class="bullets">
			<li><strong><code>instance.toggle()</code></strong>: Toggle a spinner instance.</li>
			<li><strong><code>instance.load()</code></strong>: Load / activate a spinner instance.</li>
			<li><strong><code>instance.unload()</code></strong>: Unload / deactivate a spinner instance.</li>
			<li><strong><code>instance.destroy()</code></strong>: Destroy a spinner instance.</li>
		</ul>

		<h3 class="font__title3 heading__separator">AngularJS</h3>
		<p>The AngularJS <code>SpinnerService</code> is a thin AngularJS wrapper around the vanilla core Spinner service, with the following directives added for convenience in interacting with Spinner:</p>
		<ul class="bullets">
			<li><strong><code>&lt;spinner options="{...}"&gt;</code></strong>: Create a spinner element in the DOM.</li>
			<li><strong><code>[spinner-toggle="{{id}}"]</code></strong>: Toggle the spinner that matches <code>id</code>.</li>
		</ul>

		<h2 class="font__title2">CSS Usage</h2>

		<h3 class="font__title3 heading__separator">Classes and selectors</h3>
		<ul class="bullets">
			<li><code>.spinner</code>: Spinner base class. <em>Nothing will be displayed in the UI until the active modifier class is added.</em></li>
			<li><code>.spinner--is-spinning</code>: Active / spinning spinner.</li>
			<li><code>.spinner--inline</code>: Inline spinner, for display with surrounding inline elements such as text or buttons.</li>
			<li><code>.spinner--clean</code>: Cleans / removes background and padding for a clean spinner UI.</li>
			<li><code>.spinner--absolute</code>: Absolutely positioned spinner.</li>
			<li><code>.spinner--slide</code> Spinner which slides from the top of an element.</li>
		</ul>
	</div>

	<div>
		<h2 class="font__title2">Examples</h2>
		<h3 class="font__title3 heading__separator">Active Spinner</h3>
		<brik-editor live-preview="true" editable="true">
			<brik-code lang="html">&lt;spinner options="{mods: ['active']}">&lt;/spinner></brik-code lang="html">
		</brik-editor>

		<h3 class="font__title3 heading__separator">Toggling a Spinner</h3>
		<p>Use the <code>ng-class</code> directive to activate and deactivate a spinner.</p>
		<brik-editor live-preview="true" editable="true">
			<brik-code lang="html">&lt;div data-ng-init="toggleableActive = true;">
	&lt;spinner options="{mods: ['active']}" data-ng-class="{'spinner--is-spinning': toggleableActive}">&lt;/spinner>
	&lt;button class="font__button" type="button" data-ng-click="toggleableActive = !toggleableActive">Toggle&lt;/button>
&lt;/div></brik-code lang="html">
		</brik-editor>

		<h3 class="font__title3 heading__separator">Inline Spinner</h3>
		<brik-editor live-preview="true" editable="true">
			<brik-code lang="html">&lt;button class="font__button my-inline-spinner" type="button" data-ng-click="inlineActive = !inlineActive" data-ng-init="inlineActive = true">
	Inline Spinner
	&lt;spinner options="{mods: ['active', 'inline']}" style="margin-left: 1rem;" data-ng-class="{'spinner--is-spinning':  inlineActive}">&lt;/spinner>
&lt;/button>
&lt;p>(Click to toggle spinner)&lt;/p></brik-code lang="html">
			<brik-code lang="css">.my-inline-spinner {
	background-color: hsla(0, 0%, 0%, 0.1);
	display: inline-flex;
	align-items: center;
	padding: 1rem 2rem;
}

.my-inline-spinner .spinner {
	margin-left: 1rem;
}</brik-code lang="html">
		</brik-editor>
	</div>
</brik-tabs>
