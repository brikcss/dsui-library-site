/*! ------------------------------------------------------------------------------------------------
 *  @name  @brikcss/dsui-library-site
 *  @filename  dsui-angularjs.css
 *  @version  v0.0.0-development
 *  @author  DirectScale <https://directscale.com>
 *  @homepage  https://github.com/brikcss/dsui-library-site
 *  @description  DirectScale UI Library site, built with BrikCSS.
 ** ----------------------------------------------------------------------------------------------*/


/** ------------------------------------------------------------------------------------------------
 *  _rhythm.abstract.scss
 *  ---------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Establishes a vertical rhythm grid. This offers the following benefits:
 *      - Easily manage vertical rhythm and dimensional properties (see "@tutorial" for list of
 *        dimensional properties) with `rem` units (see
 *        https://webdesign.tutsplus.com/articles/improving-layout-with-vertical-rhythm--webdesign-14070).
 *      - Easily manage responsive typography with `em` units.
 *
 *  @tutorial  It is extremely important to follow these rules in order to keep the vertical grid "in rhythm".
 *      - Definitions:
 *          - List of "dimensional properties": height, width, margin, padding, line-height, border.
 *          - 1rem = 1 vertical line unit.
 *          - 1em = 1 base font size unit.
 *      - Rules:
 *          - ALWAYS use `rem` units for dimensional properties.
 *          - ALWAYS use `em` units for the `font-size` property.
 *          - Whole numbers should be **highly** favored when applying `rem` units.
 *          - If desired, fractional numbers may be applied, but **only** in divisions of two (2).
 *            In other words, a `rem` unit can be applied in fractional divisions of 2, 4, 8, 16,
 *            etc. However, it is strongly discouraged to apply fractional numbers in divisions of
 *            more than 4. To illustrate:
 *              ```
 *              1rem // Whole numbers should be **highly** favored.
 *              3.5rem // Acceptable, division of 2.
 *              10.25rem // Acceptable, division of 4.
 *              10.33rem // Unacceptable, division of 3. Fractionals must be in divisions of 2.
 *              10.634574rem // Unacceptable, fractional numbers must be divisions of 2.
 *              10.125rem // Acceptable but discouraged, since division of 8 is > division of 4.
 *              ```
 *          - There may be cases where it is necessary to break the rules above and apply a
 *            dimension that throws the vertical grid out of rhythm. Examples might be an element
 *            that needs a 1px border, or an image that must have a certain pixel height. In such
 *            cases, follow these guidelines:
 *              - First, avoid doing so if at all possible. Use proper rem values wherever possible
 *                as it simplifies managing the vertical grid.
 *              - If breaking the rules is necessary, apply this rule to ensure the vertical grid
 *                stays in rhythm: The sum of all "dimensional properties" (which are listed above)
 *                must equal a whole rem unit.
 *              - Examples where it might be necessary to break the rules and how the above rule
 *                might be applied:
 *                  ```
 *                  // The border for this element absolutely must be 1px.
 *                  .pixel-border {
 *                      border: 1px solid hsl(0, 0, 80%);
 *                      // Bring back into rhythm with the `calc()` function:
 *                      // height = 3rem minus 1px for top border and 1px for bottom border.
 *                      height: calc(3rem - 2px);
 *                  }
 *
 *                  // This image must be 300px tall. To ensure the element stays in rhythm, a
 *                  // margin (or padding) can be applied to bring the sum of height + margin = the
 *                  // value of a whole number rem unit. Let's assume that a vertical line is 32px.
 *                  // A height of 300px (which is 9.375rem in a 32px rhythm) + (0.3125rem * 2)
 *                  // equals 10rem. With a 300px tall image, we're still "in rhythm"!
 *                  .pixel-image {
 *                      height: 300px;
 *                      margin-bottom: 0.3125rem;
 *                      margin-top: 0.3125rem;
 *                  }
 *                  ```
 ** --------------------------------------------------------------------------------------------- */
/**
 *  Apply multiple rhythms at once. Each list item applies a separate rhythm for a different media
 *  query breakpoint.
 *
 *  @param   {list}  $rhythms  $rhythm__queries  List of rhythms. Each rhythm is a list of the
 *      following values (in pixels): rhythm's vertical line height and media query min-width
 *      breakpoint at which the rhythm will be applied.
 */
/**
 *  Apply a single rhythm from a list of values.
 *
 *  @param  {list}  $rhythm:  32px 0  List of rhythms. Each rhythm is a list of the following values
 *      (in pixels): rhythm's vertical line height and media query min-width breakpoint at which the
 *      rhythm will be applied.
 */
/**
 *  Look up vertical line height or font size at a given rhythm query.
 *
 *  @param   {number}  $query:  nth(nth($rhythm__queries, 1), 2)  Query width, in pixels.
 *  @param   {string}  $property  line-height  Rhythm property to look up (line-height|font-size).
 *  @param   {list}  $rhythms:  $rhythm__queries  List of rhythm queries to be searched, each in the
 *      format of ($line-height, $font-size, $query-width).
 *  @return  {number}  $property at given $query width from list of $rhythms.
 */
/**
 *  Convert px to rem value.
 *
 *  @param   {number}  $px:  1  Pixel value to convert to rems.
 *  @param   {number}  $line-height:  nth(nth($rhythm__queries,  1), 1)  Pixel value of one (1) vertical line.
 *  @return  {number}  Value in rems.
 */
/**
 *  Styles for a rhythm grid.
 *
 *  @param   {color}  $bg:  $rhythm-grid__bg  Background color.
 */
/** ------------------------------------------------------------------------------------------------
 *  _typography.abstract.scss
 *  -------------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Typography (font) abstract.
 ** --------------------------------------------------------------------------------------------- */
/**
 *  Apply a font size in ems from a given value which is one of the predefined $font__style-queries
 *  or from a pixel value.
 *
 *  @param   {string|number}  $size  Size to convert to ems. A string will look up the font query
 *      for that given style name. A pixel number will be converted to ems.
 *  @param   {number}  $at:  0  Breakpoint / screen width for the base font size.
 *  @param   {base}  $base-query:  $font__base-query  Base font query styles. You shouldn't need to
 *      modify this.
 *  @return  {number}  Font size value in ems (unless you pass a unit other than pixels, in which
 *      case it will return that value and unit).
 */
/**
 *  Look up a font query for a given breakpoint from a list of font queries.
 *
 *  @param  {string|list}  $base-query  $font__base-query  A string will look up the font style
 *      query from $font__style-queries. It is recommended to always use a string since it utilizes
 *      your predefined list of font styles. However, for flexibility, you may also pass a custom
 *      font styles query.
 *  @param  {number}  $at  0  Breakpoint / screen width for the base font styles.
 *  @return  {list}  Font styles that match given breakpoint.
 */
/**
 *  Apply base font styles.
 */
/**
 *  Apply font styles for a given font style query.
 *
 *  @param   {string|list}  $font-query:  $font__base-query  List of font queries -- or name of list
 *      from $font__style-queries -- to apply styles for.
 *  @param   {boolean}  $px:  false  Whether to apply pixels. Should only be `true` when applying
 *      base font sizes to the body tag.
 */
/**
 *  Apply font styles for all styles and breakpoints in a given font style query.
 *
 *  @param   {string|list}  $query-style  Font styles -- or name of font query from $font__style-queries at
 *      specific $breakpoint -- to apply styles for.
 *  @param   {number}  $at:  0  Breakpoint / screen width for the base font.
 *  @param   {boolean}  $px:  false  Whether to apply pixels. Should only be `true` when applying
 *      base font sizes to the body tag.
 */
/**
 *  INTERNAL: Apply font styles for a given font query style.
 *
 *  @param   {list}  $query-style  Font styles to apply.
 *  @param   {boolean}  $px:  false  Whether to apply pixels. Should only be `true` when applying
 *      base font sizes to the body tag.
 */
/**
 *  Apply class selectors for all font queries in a given font queries map.
 *
 *  @param   {map}  $font-queries:  $font__style-queries  Font queries map, formatted like $font__style-queries.
 */
/**
 *  Apply a custom font face.
 *
 *  @param   {string}  $name  Name you want to refer to font face as.
 *  @param   {string}  $path  Directory of font file.
 *  @param   {number|string}  $weight:  400  Font weight.
 *  @param   {string}  $style:  normal  Font style.
 */
/**
 *  Applies a max-width $value to each $selector in the $map. This limits the length a line can be,
 *  which helps to follow MD typography specifications.
 *
 *  @param   {map}  $map:  $font__line-lengths  Map key is $value and map value is $selectors to
 *      apply a max-width $value to.
 */
/** ------------------------------------------------------------------------------------------------
 *  _footer.abstract.scss
 *  ---------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Footer abstract.
 ** --------------------------------------------------------------------------------------------- */
/**
 *  Global footer element.
 *
 *  @param   {number}  $height:  $footer__height  Height.
 *  @param   {number|list}  $padding:  $footer__padding  Padding.
 *  @param   {color}  $bg:  $footer__bg  Background color.
 */
/** ------------------------------------------------------------------------------------------------
 *  header.scss
 *  -----------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Global header.
 ** --------------------------------------------------------------------------------------------- */
/**
 *  Create page header.
 */
/** ------------------------------------------------------------------------------------------------
 *  elevation.abstract.scss
 *  -----------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Elevation helpers.
 ** --------------------------------------------------------------------------------------------- */
/**
 *  Elevation drop shadow.
 *
 *  @param   {number}  $level:  1  Elevation level.
 *  @param   {number}  $opacity-multiplier:  1  Opacity multiplier.
 */
/**
 *  Apply z-index.
 *
 *  @param   {number}  $level:  1  Elevation level.
 *  @param   {number}  $zindex-modifier:  0  Modifies final z-index number.
 */
/**
 *  Elevate. Applies both drop shadow and z-index mixins.
 *
 *  @param   {number}  $level:  1  Elevation level.
 *  @param   {number}  $zindex-modifier:  0  Modifies final z-index number.
 *  @param   {number}  $opacity-multiplier:  1  Opacity multiplier.
 */
/** ------------------------------------------------------------------------------------------------
 *  _sidebars.abstract.scss
 *  -----------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Sidebars brik adds a left and/or right sidebar to a view.
 ** --------------------------------------------------------------------------------------------- */
/**
 *  Create a left or right sidebar.
 *
 *  @param   {number}  $width:  $sidebar__width  Width of sidebar.
 *  @param   {string}  $side:  left|right  Left or right sidebar.
 *  @param   {number|boolean}  $pin-at:  false  Min-width value to "pin" sidebar at. `true` will
 *      make it always pinned.
 *  @param   {boolean}  $push-content:  true  Whether sidebar should "push" content when opening
 *      from off-canvas.
 */
/**
 *  Show hide element.
 */
/** ------------------------------------------------------------------------------------------------
 *  burger-button.scss
 *  ------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Burger button abstracts.
 *  @todo  Add media query for $burger-hide-at value.
 ** --------------------------------------------------------------------------------------------- */
/** Burger mixin. */
/** ------------------------------------------------------------------------------------------------
 *  reset.scss
 *  ----------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Simple CSS reset.
 ** --------------------------------------------------------------------------------------------- */
/* stylelint-disable selector-max-type */
/* line 9, src/briks/reset/reset.scss */
html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
code,
em,
img,
small,
strong,
sub,
sup,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
footer,
header,
nav,
section,
time,
audio,
video {
	padding: 0;
	border: 0;
	margin: 0;
	background: transparent;
	/* stylelint-disable-next-line */
	font-size: 100%;
	font-weight: inherit;
	vertical-align: baseline;
}

/* line 65, src/briks/reset/reset.scss */
article,
aside,
figure,
footer,
header,
nav,
section {
	display: block;
}

/* line 75, src/briks/reset/reset.scss */
html {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	overflow-y: scroll;
}

/* stylelint-disable selector-max-universal */
/* line 81, src/briks/reset/reset.scss */
*,
*:before,
*:after {
	-webkit-box-sizing: inherit;
	box-sizing: inherit;
}

/* stylelint-enable selector-max-universal */
/* line 88, src/briks/reset/reset.scss */
img,
object {
	max-width: 100%;
}

/* line 93, src/briks/reset/reset.scss */
ul {
	list-style: none;
}

/* line 97, src/briks/reset/reset.scss */
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* line 102, src/briks/reset/reset.scss */
th {
	font-weight: bold;
	vertical-align: bottom;
}

/* line 107, src/briks/reset/reset.scss */
td {
	font-weight: normal;
	vertical-align: top;
}

/* line 112, src/briks/reset/reset.scss */
input,
select {
	vertical-align: middle;
}

/* stylelint-disable selector-no-qualifying-type */
/* line 118, src/briks/reset/reset.scss */
input[type='radio'] {
	vertical-align: text-bottom;
}

/* line 122, src/briks/reset/reset.scss */
input[type='checkbox'] {
	vertical-align: bottom;
}

/* line 126, src/briks/reset/reset.scss */
strong {
	font-weight: bold;
}

/* line 130, src/briks/reset/reset.scss */
label,
input[type='file'] {
	cursor: pointer;
}

/* line 135, src/briks/reset/reset.scss */
input,
select,
textarea {
	border: 0;
	margin: 0;
}

/* line 142, src/briks/reset/reset.scss */
button,
input[type='button'],
input[type='submit'] {
	padding: 0;
	border: 0;
	border-radius: 0;
	margin: 0;
	background: transparent;
	cursor: pointer;
}

/* stylelint-enable selector-no-qualifying-type */
/* line 154, src/briks/reset/reset.scss */
button::-moz-focus-inner {
	padding: 0;
	border: 0;
}

/** ------------------------------------------------------------------------------------------------
 *  _typography.init.scss
 *  ---------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Typography init.
 ** --------------------------------------------------------------------------------------------- */
@font-face {
	font-family: "Roboto";
	font-style: normal;
	font-weight: 400;
	src: url("./fonts/Roboto-Regular.woff2") format("woff2"), url("./fonts/Roboto-Regular.woff") format("woff"), url("./fonts/Roboto-Regular.ttf") format("truetype");
}

@font-face {
	font-family: "Roboto";
	font-style: normal;
	font-weight: 500;
	src: url("./fonts/Roboto-Medium.woff2") format("woff2"), url("./fonts/Roboto-Medium.woff") format("woff"), url("./fonts/Roboto-Medium.ttf") format("truetype");
}

@font-face {
	font-family: "Roboto";
	font-style: normal;
	font-weight: 300;
	src: url("./fonts/Roboto-Light.woff2") format("woff2"), url("./fonts/Roboto-Light.woff") format("woff"), url("./fonts/Roboto-Light.ttf") format("truetype");
}

@font-face {
	font-family: "Roboto Mono";
	font-style: normal;
	font-weight: 400;
	src: url("./fonts/RobotoMono-Regular.woff2") format("woff2"), url("./fonts/RobotoMono-Regular.woff") format("woff"), url("./fonts/RobotoMono-Regular.ttf") format("truetype");
}

/* line 207, src/briks/typography/_typography.abstract.scss */
body {
	font-size: 14px;
	color: rgba(0, 0, 0, 0.87);
	font-family: "Roboto", sans-serif;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__display4 {
	font-size: 8em;
	font-weight: 300;
	line-height: 4rem;
	color: rgba(0, 0, 0, 0.54);
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__display3 {
	font-size: 4em;
	line-height: 2rem;
	color: rgba(0, 0, 0, 0.54);
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__display2 {
	font-size: 3.21429em;
	line-height: 2rem;
	color: rgba(0, 0, 0, 0.54);
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__display1 {
	font-size: 2.42857em;
	line-height: 1.5rem;
	color: rgba(0, 0, 0, 0.54);
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__headline {
	font-size: 1.71429em;
	line-height: 1.5rem;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__title {
	font-size: 1.42857em;
	font-weight: 600;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__subheading {
	font-size: 1.14286em;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__body {
	font-size: 1em;
	color: rgba(0, 0, 0, 0.87);
	font-family: "Roboto", sans-serif;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__bold {
	font-size: 1em;
	font-weight: 600;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__button {
	font-size: 1em;
	font-weight: 600;
	text-transform: uppercase;
}

/* line 318, src/briks/typography/_typography.abstract.scss */
.font__caption {
	font-size: 0.85714em;
	color: rgba(0, 0, 0, 0.54);
}

/* line 357, src/briks/typography/_typography.abstract.scss */
p {
	max-width: 60ex;
}

/* line 357, src/briks/typography/_typography.abstract.scss */
li {
	max-width: 60ex;
}

/* line 357, src/briks/typography/_typography.abstract.scss */
.font__short-line {
	max-width: 40ex;
}

/** ------------------------------------------------------------------------------------------------
 *  burger-button.init.scss
 *  -----------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Burger button init.
 ** --------------------------------------------------------------------------------------------- */
/* line 9, src/briks/burger-button/_burger-button.init.scss */
.burger {
	height: 0.7rem;
	width: 0.7rem;
	margin-right: 0.5rem;
	cursor: pointer;
	position: relative;
}

/* line 25, src/briks/burger-button/_burger-button.abstract.scss */
.burger:before {
	position: absolute;
	background-color: rgba(255, 255, 255, 0.92);
	width: 0.7rem;
	height: 0.0875rem;
	top: calc(50% - 0.04375rem - 0.21rem);
	content: '';
	display: block;
	-webkit-transition: all 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: all 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
}

/* line 36, src/briks/burger-button/_burger-button.abstract.scss */
.burger:after {
	position: absolute;
	background-color: rgba(255, 255, 255, 0.92);
	width: 0.7rem;
	height: 0.0875rem;
	bottom: calc(50% - 0.04375rem - 0.21rem);
	content: '';
	display: block;
	-webkit-transition: all 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: all 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
}

/* line 47, src/briks/burger-button/_burger-button.abstract.scss */
.burger.--is-active {
	-webkit-transform: rotate(360deg);
	transform: rotate(360deg);
}

/* line 50, src/briks/burger-button/_burger-button.abstract.scss */
.burger.--is-active:before {
	-webkit-transform: rotate(135deg);
	transform: rotate(135deg);
	top: calc(50% - 0.04375rem);
}

/* line 55, src/briks/burger-button/_burger-button.abstract.scss */
.burger.--is-active:after {
	-webkit-transform: rotate(-135deg);
	transform: rotate(-135deg);
	bottom: calc(50% - 0.04375rem);
}

/* line 61, src/briks/burger-button/_burger-button.abstract.scss */
.burger__toppings {
	position: absolute;
	background-color: rgba(255, 255, 255, 0.92);
	width: 100%;
	height: 0.0875rem;
	top: calc(50% - 0.04375rem);
	right: 0;
	opacity: 1;
	-webkit-transition: -webkit-transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: -webkit-transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3), -webkit-transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
}

/* line 72, src/briks/burger-button/_burger-button.abstract.scss */
.--is-active .burger__toppings {
	-webkit-transform: scaleX(0);
	transform: scaleX(0);
}

@media (min-width: 1080px) {
	/* line 9, src/briks/burger-button/_burger-button.init.scss */
	.burger {
		display: none;
	}
}

/* line 1, src/briks/code-editor/_code-editor.init.scss */
.editor {
	display: block;
	margin-top: 0.5rem;
	margin-bottom: 1.5rem;
}

/* line 6, src/briks/code-editor/_code-editor.init.scss */
.editor .hljs {
	line-height: 0.5rem;
	padding: 0.5rem;
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
}

/* line 12, src/briks/code-editor/_code-editor.init.scss */
.editor__code {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	background-color: #282c34;
}

/* line 17, src/briks/code-editor/_code-editor.init.scss */
.editor__code-tab {
	position: relative;
	width: 100%;
	min-width: 100%;
	margin-left: -100%;
	opacity: 0;
	-webkit-transition: opacity 0.5s, -webkit-transform 0.25s;
	transition: opacity 0.5s, -webkit-transform 0.25s;
	transition: opacity 0.5s, transform 0.25s;
	transition: opacity 0.5s, transform 0.25s, -webkit-transform 0.25s;
}

/* line 25, src/briks/code-editor/_code-editor.init.scss */
.editor__code-tab:first-of-type {
	margin-left: 0;
}

/* line 29, src/briks/code-editor/_code-editor.init.scss */
.editor__code-tab--active {
	opacity: 1;
	z-index: 1;
}

/* line 35, src/briks/code-editor/_code-editor.init.scss */
.editor__highlighted-code {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
}

/* line 41, src/briks/code-editor/_code-editor.init.scss */
.editor--read-only .editor__highlighted-code {
	position: static;
}

/* line 46, src/briks/code-editor/_code-editor.init.scss */
.editor__raw-code {
	width: 100%;
	position: relative;
	z-index: 1;
	-webkit-text-fill-color: transparent;
	text-fill-color: transparent;
}

/* line 53, src/briks/code-editor/_code-editor.init.scss */
.editor__raw-code:focus {
	-webkit-text-fill-color: inherit;
	text-fill-color: inherit;
}

/* line 58, src/briks/code-editor/_code-editor.init.scss */
.editor__raw-code.hljs {
	background: transparent;
}

/* line 62, src/briks/code-editor/_code-editor.init.scss */
.editor__raw-code code {
	outline: none;
}

/* line 67, src/briks/code-editor/_code-editor.init.scss */
.editor__tab-button {
	color: rgba(0, 0, 0, 0.54);
}

/* line 70, src/briks/code-editor/_code-editor.init.scss */
.editor__tab-button--active {
	color: rgba(0, 0, 0, 0.87);
}

/* line 74, src/briks/code-editor/_code-editor.init.scss */
.editor__tab-button + .editor__tab-button {
	margin-left: 1rem;
}

/* line 79, src/briks/code-editor/_code-editor.init.scss */
.editor__preview {
	border: 0.05rem solid #e6e6e6;
	border-bottom: 0;
	padding: 1.45rem 0.5rem 0.5rem;
	position: relative;
}

/* line 85, src/briks/code-editor/_code-editor.init.scss */
.editor__preview:before {
	content: 'Live code preview';
	position: absolute;
	left: 0;
	top: 0;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	background-color: #e6e6e6;
	height: 1rem;
	width: 100%;
	padding-left: 0.25rem;
	padding-right: 0.25rem;
	font-size: 0.85714em;
	color: rgba(0, 0, 0, 0.54);
}

/** ------------------------------------------------------------------------------------------------
 *  _footer.init.scss
 *  -----------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Footer init with default options.
 ** --------------------------------------------------------------------------------------------- */
/* line 9, src/briks/footer/_footer.init.scss */
.footer {
	background-color: #e6e6e6;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	padding: 0 1rem;
	height: 2rem;
}

/** ------------------------------------------------------------------------------------------------
 *  _header.init.scss
 *  -----------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Header init.
 ** --------------------------------------------------------------------------------------------- */
/* line 9, src/briks/header/_header.init.scss */
.header {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	position: relative;
	height: 2rem;
	padding: 0 1rem;
	background-color: #02a6f2;
	-webkit-box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.18), 0 4px 6px 0px rgba(0, 0, 0, 0.13), 0 2px 8px 0px rgba(0, 0, 0, 0.11);
	box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.18), 0 4px 6px 0px rgba(0, 0, 0, 0.13), 0 2px 8px 0px rgba(0, 0, 0, 0.11);
	z-index: 40;
}

/** ------------------------------------------------------------------------------------------------
 *  _rhythm.init.scss
 *  -----------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Rhythm init.
 ** --------------------------------------------------------------------------------------------- */
/* line 105, src/briks/rhythm/_rhythm.abstract.scss */
html {
	font-size: 30px;
}

/* line 116, src/briks/rhythm/_rhythm.abstract.scss */
body {
	line-height: 1rem;
}

@media (min-width: 768px) {
	/* line 105, src/briks/rhythm/_rhythm.abstract.scss */
	html {
		font-size: 32px;
	}
}

/* line 13, src/briks/rhythm/_rhythm.init.scss */
.rhythm__grid {
	background-image: linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px);
	background-size: 100% 1rem;
}

/* line 2, src/briks/show-hide/_show-hide.init.scss */
.show-hide {
	cursor: pointer;
	overflow: hidden;
	position: relative;
	-webkit-transition: height 300ms cubic-bezier(0.3, 0.2, 0.2, 1.15);
	transition: height 300ms cubic-bezier(0.3, 0.2, 0.2, 1.15);
}

/* line 19, src/briks/show-hide/_show-hide.abstract.scss */
.show-hide__icon {
	height: 0.45rem;
	width: 0.45rem;
	display: inline-block;
	position: absolute;
	right: 0.5rem;
	top: calc(50% - 0.225rem);
	-webkit-transition: -webkit-transform 225ms cubic-bezier(0.3, 0.2, 0.2, 1);
	transition: -webkit-transform 225ms cubic-bezier(0.3, 0.2, 0.2, 1);
	transition: transform 225ms cubic-bezier(0.3, 0.2, 0.2, 1);
	transition: transform 225ms cubic-bezier(0.3, 0.2, 0.2, 1), -webkit-transform 225ms cubic-bezier(0.3, 0.2, 0.2, 1);
}

/* line 29, src/briks/show-hide/_show-hide.abstract.scss */
.show-hide__icon:before, .show-hide__icon:after {
	background-color: #b3b3b3;
	content: ' ';
	display: inline-block;
	position: absolute;
}

/* line 37, src/briks/show-hide/_show-hide.abstract.scss */
.show-hide__icon:before {
	height: 0.0625rem;
	width: 100%;
	top: calc(50% - 0.03125rem);
}

/* line 43, src/briks/show-hide/_show-hide.abstract.scss */
.show-hide__icon:after {
	height: 94%;
	width: 0.0625rem;
	top: 3%;
	right: calc(50% - 0.03125rem);
	-webkit-transform: scale(1);
	transform: scale(1);
	-webkit-transition: -webkit-transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1);
	transition: -webkit-transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1);
	transition: transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1);
	transition: transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1), -webkit-transform 300ms cubic-bezier(0.3, 0.2, 0.2, 1);
}

/* line 55, src/briks/show-hide/_show-hide.abstract.scss */
.show-hide--is-active .show-hide__icon {
	-webkit-transform: rotate(180deg);
	transform: rotate(180deg);
}

/* line 58, src/briks/show-hide/_show-hide.abstract.scss */
.show-hide--is-active .show-hide__icon:after {
	-webkit-transform: scale(0);
	transform: scale(0);
}

/** ------------------------------------------------------------------------------------------------
 *  _sidebars.init.scss
 *  -------------------
 *  @author  brikcss  <https://github.com/brikcss>
 *  @description  Sidebars init with default options.
 ** --------------------------------------------------------------------------------------------- */
/* line 9, src/briks/sidebars/_sidebars.init.scss */
.sidebars {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
}

/* line 13, src/briks/sidebars/_sidebars.init.scss */
.sidebars__content {
	-webkit-box-flex: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
	width: 100%;
}

/* line 19, src/briks/sidebars/_sidebars.init.scss */
.sidebars__left {
	height: 100vh;
	width: 8.125rem;
	min-width: 8.125rem;
	overflow-y: auto;
	position: relative;
	-webkit-box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.18), 0 6px 9px 0px rgba(0, 0, 0, 0.13), 0 3px 11px 1px rgba(0, 0, 0, 0.11);
	box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.18), 0 6px 9px 0px rgba(0, 0, 0, 0.13), 0 3px 11px 1px rgba(0, 0, 0, 0.11);
	z-index: 60;
	margin-left: -8.125rem;
	will-change: margin-left;
	-webkit-transition: margin-left 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: margin-left 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
}

/* line 43, src/briks/sidebars/_sidebars.abstract.scss */
.sidebars__left:before {
	content: ' ';
	background-color: inherit;
	width: 1rem;
	height: 100%;
	position: absolute;
	left: -1rem;
	top: 0;
}

@media (min-width: 1080px) {
	/* line 19, src/briks/sidebars/_sidebars.init.scss */
	.sidebars__left {
		margin-left: 0;
		position: relative;
		left: auto;
		top: auto;
	}
}

/* line 72, src/briks/sidebars/_sidebars.abstract.scss */
.sidebars__left.--is-active {
	margin-left: 0;
}

/* line 25, src/briks/sidebars/_sidebars.init.scss */
.sidebars__right {
	height: 100vh;
	width: 8.125rem;
	min-width: 8.125rem;
	overflow-y: auto;
	position: relative;
	-webkit-box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.18), 0 6px 9px 0px rgba(0, 0, 0, 0.13), 0 3px 11px 1px rgba(0, 0, 0, 0.11);
	box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.18), 0 6px 9px 0px rgba(0, 0, 0, 0.13), 0 3px 11px 1px rgba(0, 0, 0, 0.11);
	z-index: 60;
	margin-right: -8.125rem;
	will-change: margin-right;
	-webkit-transition: margin-right 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
	transition: margin-right 300ms cubic-bezier(0.3, 0.2, 0.2, 1.3);
}

/* line 43, src/briks/sidebars/_sidebars.abstract.scss */
.sidebars__right:before {
	content: ' ';
	background-color: inherit;
	width: 1rem;
	height: 100%;
	position: absolute;
	right: -1rem;
	top: 0;
}

/* line 72, src/briks/sidebars/_sidebars.abstract.scss */
.sidebars__right.--is-active {
	margin-right: 0;
}

/*

Atom One Dark by Daniel Gamage
Original One Dark Syntax theme from https://github.com/atom/one-dark-syntax

base:    #282c34
mono-1:  #abb2bf
mono-2:  #818896
mono-3:  #5c6370
hue-1:   #56b6c2
hue-2:   #61aeee
hue-3:   #c678dd
hue-4:   #98c379
hue-5:   #e06c75
hue-5-2: #be5046
hue-6:   #d19a66
hue-6-2: #e6c07b

*/
/* line 21, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs {
	display: block;
	overflow-x: auto;
	padding: 0.5em;
	color: #abb2bf;
	background: #282c34;
}

/* line 29, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-comment,
.hljs-quote {
	color: #5c6370;
	font-style: italic;
}

/* line 35, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-doctag,
.hljs-keyword,
.hljs-formula {
	color: #c678dd;
}

/* line 41, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-section,
.hljs-name,
.hljs-selector-tag,
.hljs-deletion,
.hljs-subst {
	color: #e06c75;
}

/* line 49, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-literal {
	color: #56b6c2;
}

/* line 53, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-string,
.hljs-regexp,
.hljs-addition,
.hljs-attribute,
.hljs-meta-string {
	color: #98c379;
}

/* line 61, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-built_in,
.hljs-class .hljs-title {
	color: #e6c07b;
}

/* line 66, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-attr,
.hljs-variable,
.hljs-template-variable,
.hljs-type,
.hljs-selector-class,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-number {
	color: #d19a66;
}

/* line 77, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-symbol,
.hljs-bullet,
.hljs-link,
.hljs-meta,
.hljs-selector-id,
.hljs-title {
	color: #61aeee;
}

/* line 86, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-emphasis {
	font-style: italic;
}

/* line 90, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-strong {
	font-weight: bold;
}

/* line 94, node_modules/highlight.js/styles/atom-one-dark.css */
.hljs-link {
	text-decoration: underline;
}

/* line 5, src/angularjs/app.scss */
html {
	overflow: hidden;
}

/* line 9, src/angularjs/app.scss */
body {
	color: rgba(0, 0, 0, 0.87);
	height: 100%;
	overflow: hidden;
}

/* line 39, src/angularjs/app.scss */
h1 {
	margin-top: 2rem;
}

/* line 39, src/angularjs/app.scss */
h2 {
	margin-top: 2rem;
}

/* line 39, src/angularjs/app.scss */
h3 {
	margin-top: 1.5rem;
}

/* line 39, src/angularjs/app.scss */
h4 {
	margin-top: 1rem;
}

/* line 39, src/angularjs/app.scss */
h5 {
	margin-top: 0.5rem;
}

/* line 39, src/angularjs/app.scss */
h6 {
	margin-top: 0.5rem;
}

/* line 39, src/angularjs/app.scss */
p {
	margin-top: 0.5rem;
}

/* line 39, src/angularjs/app.scss */
h1:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
h2:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
h3:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
h4:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
h5:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
h6:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
p:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
ul:first-child {
	margin-top: 0;
}

/* line 39, src/angularjs/app.scss */
ol:first-child {
	margin-top: 0;
}

/* line 45, src/angularjs/app.scss */
.sp__0 {
	margin: 0;
}

/* line 53, src/angularjs/app.scss */
code {
	background-color: rgba(0, 0, 0, 0.08);
	font-family: 'Roboto Mono', monospace;
}

/* line 58, src/angularjs/app.scss */
.bullets,
.numbers {
	padding-left: 1rem;
}

/* line 63, src/angularjs/app.scss */
.bullets li,
.numbers li {
	margin-top: 0.5rem;
}

/* line 68, src/angularjs/app.scss */
.bullets {
	list-style-type: disc;
}

/* line 72, src/angularjs/app.scss */
.numbers {
	list-style-type: decimal;
}

/* line 79, src/angularjs/app.scss */
.header {
	color: rgba(255, 255, 255, 0.92);
}

/* line 82, src/angularjs/app.scss */
.header__title {
	padding-right: 0.5rem;
	-webkit-box-flex: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
}

/* line 86, src/angularjs/app.scss */
.header__title:first-child {
	padding-left: 0;
}

/* line 91, src/angularjs/app.scss */
.header .burger {
	padding-right: 0.5rem;
}

/* line 95, src/angularjs/app.scss */
.header__button {
	color: rgba(255, 255, 255, 0.92);
}

/* line 103, src/angularjs/app.scss */
.page {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-ms-flex-direction: column;
	flex-direction: column;
	min-height: 100vh;
	min-width: 100vw;
}

@media (min-width: 1080px) {
	/* line 103, src/angularjs/app.scss */
	.page {
		min-width: 0;
	}
}

/* line 113, src/angularjs/app.scss */
.page__scroller {
	height: calc(100vh - 2rem);
	-webkit-box-flex: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
	overflow-y: auto;
}

/* line 119, src/angularjs/app.scss */
.page__content {
	-webkit-box-flex: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
	min-height: calc(100vh - 4rem);
	padding: 1rem;
}

/* line 129, src/angularjs/app.scss */
.superbar {
	background-color: #f2f2f2;
	overflow: hidden;
}

/* line 133, src/angularjs/app.scss */
.superbar__header {
	background-color: #607c8a;
	height: 2rem;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
}

/* line 141, src/angularjs/app.scss */
.superbar__logo {
	max-height: 80%;
	max-width: 80%;
}

/* line 146, src/angularjs/app.scss */
.superbar__body {
	height: calc(100vh - 2rem);
	overflow-y: auto;
}

/* line 151, src/angularjs/app.scss */
.superbar__section {
	border-bottom: 1px solid #cccccc;
}

/* line 157, src/angularjs/app.scss */
.superbar__link {
	font-size: 1.14286em;
	color: inherit;
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	height: 1.5rem;
	position: relative;
	text-decoration: none;
}

/* line 167, src/angularjs/app.scss */
.superbar__menu {
	list-style-type: none;
}

/* line 170, src/angularjs/app.scss */
.superbar__menu .superbar__link {
	font-size: 1em;
	color: rgba(0, 0, 0, 0.87);
	font-family: "Roboto", sans-serif;
	height: 1rem;
	padding-left: 1.5rem;
}

/* line 177, src/angularjs/app.scss */
.superbar__menu-icon {
	color: #607c8a;
	display: -webkit-inline-box;
	display: -ms-inline-flexbox;
	display: inline-flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	font-size: 0.75rem;
	width: 1.5rem;
}

/* line 187, src/angularjs/app.scss */
.editor {
	display: block;
}
/*# sourceMappingURL=data:application/json;base64, */